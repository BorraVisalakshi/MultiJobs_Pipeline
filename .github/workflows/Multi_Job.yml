# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Multiple Jobs in a Pipeline

on:
  push:
    branches: [ main ]
 
jobs:

   Build_Deploy:
    runs-on: self-hosted

    steps:
    
  #Checkout the code
    - name: Step-1 Checkout the Code
      uses: actions/checkout@v2
    
  #Build with Maven Goals
    - name: Step-2 Build with Maven
      run: mvn clean install
      
  # Upload to artifactory
    - name: Upload to Artifactory
      run:  Remove-item alias:curl;
            curl -X PUT -u ${{ secrets.USERNAME_ARTIFACTORY }}:${{ secrets.PASSWORD_ARTIFACTORY }} -T C:\MultiJobs_Pipeline\SlefHosted\Workspace\MultiJobs_Pipeline\MultiJobs_Pipeline\target\HelloWorld.war "http://localhost:8082/artifactory/CG-libs-release-local/HelloWorld.war"

  #Zip the code
    - name: Step-3 Zip the Source code
      uses: papeloto/action-zip@v1
      with:
          dest: SampleWebApp.zip
          
  #Verify the Zip folder
    - name: Step-4 Verify Directory
      run: dir
      
  #Move the Zip to D: drive
    - name: Step-5 Move Directory to D drive
      run: move SampleWebApp.zip D:\Actions
      
  #Deploy to tomcat
    - name: Step-6 Deploy to Tomcat
      run: mvn tomcat7:deploy
      
  #Deploy to Weblogic
    - name: Step-7  Deploy to Weblogic
      run: mvn weblogic:deploy
      
  #Copy to local System from Remote Server
    - name: Copy to local from Remote     
      run: scp -o  StrictHostKeyChecking=no -i C:\Users\trbor\Downloads\POC_AWS.pem ${{ secrets.USER }}@${{ secrets.HOST }}:/home/ec2-user/GitHub_Actions/HelloWorld.war D:\Actions\
   
   #Check Servicenow CR number Status
    - name: Check Servicenow Status
     # shell: pwsh
      run: |
            .\CRNum.ps1 -username ${{ secrets.SERVICENOW_USER }} -password ${{ secrets.SERVICENOW_PASSWORD }} -crnumber ${{ secrets.CR_NUMBER }}
               
#Starting another Job on different Runner

   Upload_to_Remote:
   
    runs-on: ubuntu-latest
    needs: Build_Deploy
    
    steps:
   
   #Checkout the code
     - name: Checkout the code
       uses: actions/checkout@v2
       
  #Build with maven
     - name: Build with maven
       run: 
            mvn clean;
            mvn install;

    #Velify the all the folders in Main Directory     
     - name: Connect to EC2 via SSH
       uses: fifsky/ssh-action@master
       with:
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            host: ${{ secrets.HOST }}
            port: ${{ secrets.PORT }}
            user: ${{ secrets.USER }}
            command: 
                    sudo su;
                    ls -a;

    #Copy via SCP to remote repository ec2           
     - name: Copy file via ssh password
       uses: noobly314/deploy-with-scp@v1
       with:
          server-ip: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.PORT }}
          src: "/home/runner/work/MultiJobs_Pipeline/MultiJobs_Pipeline/target/HelloWorld.war"
          dest: "/home/ec2-user/GitHub_Actions/" 
   
   #Dpeloy to Tomcat on EC2 Instance
     - name: Step:6 Deploy to Tomcat on EC2
       run: curl -u ${{ secrets.TOMCAT_USER }}:${{ secrets.TOMCAT_PASSWORD }} -T /home/runner/work/MultiJobs_Pipeline/MultiJobs_Pipeline/target/HelloWorld.war "http://ec2-3-136-85-150.us-east-2.compute.amazonaws.com:8080/manager/text/deploy?path=/SpringApp"
       
       
       
       
       
       
      
 
